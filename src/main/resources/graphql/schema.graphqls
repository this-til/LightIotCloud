scalar DateTime
@specifiedBy(url:
"https://scalars.graphql.org/andimarek/date-time.html"
)

type Query {

    # no jwt
    login (username : String , password :String) : String

    # no jwt
    register (username : String , password :String) : Boolean


    self : User!
    temporary(username : String , password :String) : User


}

#type Subscription {
#}

input TimeRange {
    start : DateTime
    end : DateTime
}

type Result {
    resultType : ResultType
    message: String
}

enum ResultType {
    SUCCESSFUL
    FAIL
    ERROR
}

enum UserType {
    administrators, user, device
}

type User {

    id : ID!
    username : String!
    userType : UserType!
    createdAt : DateTime!
    updatedAt : DateTime!
    phone : String
    email : String

    lights : [Light!]!
    cars : [Car!]!

    getLightByName(name : String) : Light
    getCarByName(name : String) : Car
    getLightById(id : ID) : Light
    getCarById(id : ID) : Car

    registerLight(name : String!) : Result!
    registerCar(name : String!) : Result!
}

type Light {

    id : ID!
    userId : ID!
    name : String!
    createdAt : DateTime!
    updatedAt : DateTime!

    datas(timeRange : TimeRange) : [LightData!]!
    detectionKeyframes(timeRange : TimeRange) : [DetectionKeyframe!]!

    updata(lightDataInput : LightDataInput) : Result
}

type Car {
    id : ID!
    userId : ID!
    name : String!
    createdAt : DateTime!
    updatedAt : DateTime!
}

type LightData {
    id : ID!
    lightId : ID!

    time : DateTime!

    humidity : Float
    temperature : Float
    pm10 : Float
    pm2_5 : Float
    illumination : Float
    windSpeed : Float
    windDirection : Float
}

type DetectionKeyframe {
    id : ID!
    lightId : ID!
    url : String!
    time : DateTime!

    detections : [Detection!]!
}

type Detection {
    id : ID!
    keyframeId : ID!
    itemId : ID!
    x : Float!
    y : Float!
    w : Float!
    h : Float!
    probability : Float!

    model : String
    item : String

}

input LightDataInput  {
    humidity : Float
    temperature : Float
    pm10 : Float
    pm2_5 : Float
    illumination : Float
    windSpeed : Float
    windDirection : Float
}
